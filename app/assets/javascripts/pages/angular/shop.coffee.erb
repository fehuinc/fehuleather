angular.module "Shop", []

.controller "ShopCtrl", new Array "$http", "$scope", ($http, $scope)->
  
  ## LOCALS
  showingProduct =
    index: null
    scope: null
  
  
  ## SCOPE LOCALS
  $http.get("/api/totem").then (response)->
    $scope.products = response.data
    
    for product in $scope.products
      product.specimens = []
      variations = product.variations.sort("level")
      
      # The first variation is what we use for the totem
      firstVariation = variations[0]
      
      # We also want the default variant of all variations that have an image
      # Skip the first variation, because we're already using it for the totem
      namesOfDefaultVariantsWithImages = []
      for variation, i in variations when i > 0 and variation.has_image
        has_default = false
        
        for variant in variation.variants when variant.default
          has_default = true
          namesOfDefaultVariantsWithImages.push variant.name
        
        # If there's no default, we'll just use the first result
        unless has_default
          namesOfDefaultVariantsWithImages.push variation.variants[0].name
          
      
      for variant in firstVariation.variants
        file = "<%= ENV['IMAGEPATH'] %>#{product.name}/totem/"
        file += [variant.name].concat(namesOfDefaultVariantsWithImages).join("-")
        file = file.toLowerCase()
            .replace('&', 'and')
            .replace(/[^0-9a-z\-\/]/g, ' ')
            .replace(/\s+/g, '-')
        file += ".jpg"
        
        product.specimens.push
          name: variant.name
          totem: file
          description: variant.description
  
  ## SCOPE FUNCTIONS
  
  $scope.infoIsOpen = (productIndex)->
    return showingProduct.index is productIndex
  
  $scope.toggleProductInfo = (productIndex, productScope)->
    showingProduct.scope?.showingProductInfo = false
    
    if showingProduct.index is productIndex
      showingProduct.index = null
      showingProduct.scope = null
    else
      showingProduct.index = productIndex
      showingProduct.scope = productScope
      showingProduct.scope?.showingProductInfo = true
  
